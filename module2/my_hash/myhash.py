# -*- coding:utf-8 -*-
# __author__="X1gang"
# Date:2018/11/30

'''
#hash在当前运行程序中，固定的被hash字符，hash后的值不会变，但是重启程序后又会变化
#hash后的值，不可逆，不可反推，即无法破解，基于此特性，可以用作密码保存

#MD5讯息摘要演算法（MD5 Message-Digest Algorithm），密码杂凑函数，可产生一个128位的散列值（hash value），用于确保信息传输完整一致
#1.输入任意长度的信息，经过处理，输出为128位的信息（数字指纹）；
#2.不同的输入得到的不同的结果（唯一性）；跟hash不一样，不论在哪里md5，固定的被md5的值得到的加密后的值永远不变

#MD5特点   不可逆，可以对文件直接进行md5，而且很快(比如上G的视频文件)
# 压缩性：任意长度的数据，算出的MD5值的长度都是固定的
# 容易计算：从原数据计算出MD5值很容易
# 抗修改性：对原数据进行任何改动，修改一个字节生成的MD5值区别也会很大
# 强抗碰撞：已知原数据和MD5，想找到一个具有相同MD5值的数据（即伪造数据）是非常困难的。

#MD5用途  防止被篡改，防止直接看明文，防止抵赖(数字签名)
'''

import hashlib
m = hashlib.md5()
a = m.update(b"xg123")
print(m.hexdigest())  #以16进制输出密文，每两位十六进制代表一个字节，密文是32位十六进制，所以32*4=128
print(m.digest())  #以bytes展示密文


